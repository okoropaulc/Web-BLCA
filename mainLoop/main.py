#!/usr/bin/python3import subprocessimport osimport logginglogging.basicConfig(level=logging.DEBUG, filename="web-blca.log")#runs bash command but does not print outdef normal(cmd):    subprocess.run([cmd], stdout=subprocess.PIPE, stderr=subprocess.PIPE, check=True, shell=True)    logging.info(cmd)#runs call and prints out to shell sessiondef normal_verbose(cmd):    call = subprocess.run([cmd], check=True, shell=True)    logging.info(cmd)#function checks to see if program is installed and in path somewhat of a formalitydef check_program(tool):    try:        if tool == "muscle":            subprocess.call([tool, '-version'],stdout=subprocess.PIPE)        else:            subprocess.call([tool, "--help"],stdout=subprocess.PIPE)    except OSError as e:        if e.errno == os.errno.ENOENT:            print(tool + " not found, installing")            if tool == "pip":                normal("sudo apt install -y python3-pip")                logging.info("pip not found")                logging.info("sudo apt install -y python3-pip")            elif tool == "blastn":                logging.info("blast not found")                normal("sudo apt install -y ncbi-blast+")                logging.info("sudo apt install -y ncbi-blast+")            else:                logging.info(tool + " not found")                normal("sudo apt install -y " + tool)                logging.info("sudo apt install -y " + tool)    logging.info(tool +" installed and working fine")#function to make sure all dependencies are installed and in path TODO setup BLCA universlly ie. first scriptdef setup():    cwd = os.getcwd()    list = []    with open("depend.txt", 'r') as dependencies:        all_line = dependencies.read()    for line in all_line.split():        list.append(line.strip())    print(list)    for program in list:        check_program(program)    #biopython needs to be installed through pip so this just checks it    logging.info("pip3 install biopython")    normal("pip3 install biopython")    logging.info("All dependencies installed")#Handles creating the user directory and writing the user data to file and running BLCAdef blca(user_id, data):    cwd = os.getcwd()    logging.info("mkdir "+user_id)    normal("mkdir "+user_id)    os.chdir("..")    print(os.getcwd())    logging.info("cp -rf BLCA "+cwd+"/"+user_id)    normal("cp -rf BLCA "+cwd+"/"+user_id)    os.chdir(cwd +"/"+user_id+"/BLCA")       file = open("data.fasta", "w")    file.write(data)    file.close()    logging.info("python3 2.blca_main.py -i data.fasta")    normal("python3 2.blca_main.py -i data.fasta")    print("ok")#Runs setup methodsetup()#processing for testingfasta_stuff = "" with open("test.fasta", "r") as myfile:    fasta_stuff = myfile.read()#Hard-coded for now, will be dynamic lateruser_id = "ben"blca(user_id, fasta_stuff)#TODO make a queue, (for loop) that calls in order#TODO send email when job is doneprint("all good boss")